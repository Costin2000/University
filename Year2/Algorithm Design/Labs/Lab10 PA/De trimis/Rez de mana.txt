Brebu Costin-Bogdan 321CD

1)

nod sursa: (1), d[1] = 0

1: Q = <1 2 3 4 5 6 7> 
    extragem nodul 1 (d[1] = 0)
    ii are vecini pe 2 3 5 6 7
    d[2] = 3
    d[3] = 4
    d[5] = 1
    d[6] = 10
    d[7] = 3
    p[2] = p[3] = p[5] = p[6] = p[7] = 1


2: Q = <2 3 4 5 6 7> 
    extrag nodul 5 pt ca are cost minim d[5] = 1
    ii are vecini pe 4 7

    d[4] initial este +INF 
    d[5] + w(5, 4) = 1 + 3 = 4 => se relaxeaza, d[4] = 4, p[4] = 5

    d[7] initial este 3 
    d[5] + w(5, 7) = 1 + 1 = 2 => se relaxeaza, d[7] = 2, p[7] = 5


3: Q = <2 3 4 6 7> 
    extrag nodul 7 pt ca are cost minim d[7] = 2
    ii are vecini pe 5 4 3

    d[5] = 1  
    d[7] + w(7, 5) = 2 + 2 = 4 => nu se relaxeaza

    d[4] = 4
    d[7] + w(7, 4) = 2 + 10 = 12 => nu se relaxeaza

    d[3] = 4  
    d[7] + w(7, 3) = 2 + 1 = 3 => se relaxeaza d[3] = 3, p[3] = 7


4: Q = <2 3 4 6> 
    extrag nodul 2 pt ca are cost minim d[2] = 3
    il are vecin pe 3

    d[3] = 3 
    d[2] + w(2, 3) = 3 + 2 = 5 => nu se relaxeaza


5: Q = <3 4 6>
    se extrage nodul 3 pt ca are cost minim d[3] = 3
    ii are vecini pe 4 si 6

    d[4] = 4
    d[3] + w(3, 4) = 3 + 2 = 5 => nu se relaxeaza

    d[6] = 10 
    d[3] + w(3, 6) = 3 + 2 = 5 => se relaxeaza d[6] = 5, p[6] = 3


6: Q = <4 6> 
    se extrage nodul 4 pt ca are cost minim d[4] = 4
    nu are vecini


7: Q = <6> 
    extragem nodul 6 (ultimul nod)
    il are vecin pe 4
    d[4] = 4 
    d[6] + w(6, 4) = 5 + 2 = 7 => nu se relaxeaza 

8: Q = <> 
coada este vida si ne oprim

Rezultate finale:
Nod 1 d[1] = 0 p[1] = NULL
Nod 2 d[2] = 3 p[2] = 1
Nod 3 d[3] = 3 p[3] = 7
Nod 4 d[4] = 4 p[4] = 5
Nod 5 d[5] = 1 p[5] = 1
Nod 6 d[6] = 5 p[6] = 3
Nod 7 d[7] = 2 p[7] = 2


2)

initializari: d[i] = +INF, p[i] = NULL, i in (1, 7)
nod sursa: (1), d[1] = 0

1: i = 1
    nod considerat: 1
    muchiile:
        1 -> 2 cost = 3 -> d[2] = 3, p[2] = 1
        1 -> 3 cost = 4 -> d[3] = 4, p[3] = 1
        1 -> 5 cost = 1 -> d[5] = 1, p[5] = 1
        1 -> 6 cost = 10 -> d[6] = 10, p[6] = 1
        1 -> 7 cost = 3 -> d[7] = 3, p[7] = 1
        pentru toate distantele actualizate, valoarea precedenta era +INF

2: i = 2
    noduri considerate: 2, 3, 5, 6, 7
    muchiile:
        2 -> 3 cost = 5 -> nu se relaxeaza
        3 -> 4 cost = 6 -> d[4] = 6, p[4] = 3
        3 -> 6 cost = 6 -> d[6] = 6, p[6] = 3
        5 -> 4 cost = 4 -> d[4] = 4, p[4] = 5
        5 -> 7 cost = 1 -> d[7] = 2, p[7] = 5
        6 -> 4 cost = 2 -> nu se relaxeaza
        7 -> 5 cost = 2 -> nu se relaxeaza
        7 -> 3 cost = 1 -> d[3] = 2, p[3] = 7
        7 -> 4 cost = 10 -> nu se relaxeaza

3: i = 3
    noduri considerate: 3, 4, 6, 7
    muchiile:
        3 -> 4 cost = 2 -> nu se relaxeaza
        3 -> 6 cost = 2 -> d[6] = 5, p[6] = 3
        4 -> nu are muchii
        6 -> 4 cost = 2 -> nu se relaxeaza
        7 -> 4 cost = 10 -> nu se relaxeaza
        7 -> 3 cost = 1 -> nu se relaxeaza (relaxat anterior)

4: i = 4
    nod considerat: 6
    6 -> 4 cost = 2 -> nu se relaxeaza

5: i = 5
    niciun nod considerat

6: i = 6
    niciun nod considerat

Rezultate algoritm:
Nod 1 d[1] = 0 p[1] = NULL
Nod 2 d[2] = 3 p[2] = 1
Nod 3 d[3] = 3 p[3] = 7
Nod 4 d[4] = 4 p[4] = 5
Nod 5 d[5] = 1 p[5] = 1
Nod 6 d[6] = 5 p[6] = 3
Nod 7 d[7] = 2 p[7] = 2














