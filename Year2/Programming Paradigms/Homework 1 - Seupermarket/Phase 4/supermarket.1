#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1           0 2300 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 12 #"racket/match"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"queue.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 2 #" ("
0 0 14 3 15 #"all-defined-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ITEMS"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; TODO"
0 0 24 29 1 #"\n"
0 0 17 3 84
(5
 #"; Ave\xC8\x9Bi libertatea s\xC4\x83 v\xC4\x83 structura\xC8\x9Bi prog"
 #"ramul cum dori\xC8\x9Bi (dar cu restric\xC8\x9Biile"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(6
 #"; de mai jos), astfel \xC3\xAEnc\xC3\xA2t func\xC8\x9Bia serve s\xC4"
 #"\x83 func\xC8\x9Bioneze conform specifica\xC8\x9Biei."
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Restric\310\233ii (impuse de checker):"
0 0 24 29 1 #"\n"
0 0 17 3 68
(7
 #"; - trebuie s\xC4\x83 existe \xC3\xAEn continuare func\xC8\x9Bia (emp"
 #"ty-counter index)"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#"; - cozile de la case trebuie implementate folosind noul TDA queue"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"reverse-list"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 6 #"helper"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 6 #"helper"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 12 #"reverse-list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 6 #"helper"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 2 #" ("
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 2 #"tt"
0 0 24 3 1 #" "
0 0 14 3 2 #"et"
0 0 24 3 1 #" "
0 0 14 3 5 #"queue"
0 0 24 3 1 #" "
0 0 14 3 5 #"stare"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"empty-counter"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 12 #")           "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-counter"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 11 #"empty-queue"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"update"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-index"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 5 #"index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 8 #"counters"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"tt+"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 7 #"minutes"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #" ["
0 0 14 3 2 #"tt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-tt"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 14 3 7 #"minutes"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"et+"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 14 3 7 #"minutes"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #" ["
0 0 14 3 2 #"et"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-et"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 14 3 7 #"minutes"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"add-to-counter"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"items"
0 0 24 3 6 #")     "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 8 #")       "
0 0 24 3 25 #"                         "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"queue-empty?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 2 #"tt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-tt"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 14 3 5 #"items"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 2 #"et"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-et"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 14 3 5 #"items"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 5 #"queue"
0 0 24 3 2 #" ("
0 0 14 3 7 #"enqueue"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"items"
0 0 24 3 3 #") ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 2 #"tt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-tt"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 14 3 5 #"items"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 5 #"queue"
0 0 24 3 2 #" ("
0 0 14 3 7 #"enqueue"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"items"
0 0 24 3 3 #") ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 7 #"))]))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"create-pereche"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 7 #"functie"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-index"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 7 #"functie"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"findMin"
0 0 24 3 1 #" "
0 0 14 3 7 #"functie"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"findMin-helper"
0 0 24 3 1 #" "
0 0 14 3 7 #"functie"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #" ("
0 0 14 3 14 #"create-pereche"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #") "
0 0 14 3 7 #"functie"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"findMin-helper"
0 0 24 3 1 #" "
0 0 14 3 7 #"functie"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #" "
0 0 14 3 7 #"pereche"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #") "
0 0 14 3 7 #"pereche"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 7 #"functie"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 7 #"pereche"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"findMin-helper"
0 0 24 3 1 #" "
0 0 14 3 7 #"functie"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 3 #") ("
0 0 14 3 14 #"create-pereche"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #") "
0 0 14 3 7 #"functie"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 7 #"functie"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 7 #"pereche"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-index"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"pereche"
0 0 24 3 5 #"))) ("
0 0 14 3 14 #"findMin-helper"
0 0 24 3 1 #" "
0 0 14 3 7 #"functie"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 3 #") ("
0 0 14 3 14 #"create-pereche"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #") "
0 0 14 3 7 #"functie"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"findMin-helper"
0 0 24 3 1 #" "
0 0 14 3 7 #"functie"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #") "
0 0 14 3 7 #"pereche"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"min-tt"
0 0 24 3 2 #" ("
0 0 14 3 7 #"findMin"
0 0 24 3 1 #" "
0 0 14 3 10 #"counter-tt"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"min-et"
0 0 24 3 2 #" ("
0 0 14 3 7 #"findMin"
0 0 24 3 1 #" "
0 0 14 3 10 #"counter-et"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(8
 #"; intoarce numarul de alimente al primului client din coada casei dat"
 #"a ca parametru"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"top-nrAlimente"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"top"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"remove-first-from-counter"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 4 #")   "
0 0 17 3 21 #"; testat\304\203 de checker"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"queue-empty?"
0 0 24 3 2 #" ("
0 0 14 3 7 #"dequeue"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 2 #"tt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-tt"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 3 #") ("
0 0 14 3 10 #"counter-et"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 2 #"et"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 5 #"queue"
0 0 24 3 2 #" ("
0 0 14 3 7 #"dequeue"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 2 #"tt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-tt"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 3 #") ("
0 0 14 3 10 #"counter-et"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 2 #"et"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"top"
0 0 24 3 2 #" ("
0 0 14 3 7 #"dequeue"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 5 #"queue"
0 0 24 3 2 #" ("
0 0 14 3 7 #"dequeue"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"pass-time-through-counter"
0 0 24 3 1 #" "
0 0 14 3 7 #"minutes"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"C"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-tt"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 14 3 7 #"minutes"
0 0 24 3 3 #") ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ["
0 0 14 3 2 #"tt"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ["
0 0 14 3 2 #"et"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ["
0 0 14 3 2 #"tt"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-tt"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 14 3 7 #"minutes"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ["
0 0 14 3 2 #"et"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-et"
0 0 24 3 1 #" "
0 0 14 3 1 #"C"
0 0 24 3 2 #") "
0 0 14 3 7 #"minutes"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"      )))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; TODO"
0 0 24 29 1 #"\n"
0 0 17 3 71
(9
 #"; Implementa\xC8\x9Bi func\xC8\x9Bia care simuleaz\xC4\x83 fluxul cli"
 #"en\xC8\x9Bilor pe la case."
) 0 0 24 29 1 #"\n"
0 0 17 3 66
(10
 #"; ATEN\xC8\x9AIE: Fa\xC8\x9B\xC4\x83 de etapa 3, apare un nou tip de "
 #"cerere, a\xC8\x99adar"
) 0 0 24 29 1 #"\n"
0 0 17 3 84
(11
 #"; requests con\xC8\x9Bine 5 tipuri de cereri (cele mo\xC8\x99tenite d"
 #"in etapa 3 plus una nou\xC4\x83):"
) 0 0 24 29 1 #"\n"
0 0 17 3 108
(12
 #";   - (<name> <n-items>) - persoana <name> trebuie a\xC8\x99ezat\xC4"
 #"\x83 la coad\xC4\x83 la o cas\xC4\x83              (ca \xC3\xAEnainte"
 #")"
) 0 0 24 29 1 #"\n"
0 0 17 3 107
(13
 #";   - (delay <index> <minutes>) - casa <index> este \xC3\xAEnt\xC3"
 #"\xA2rziat\xC4\x83 cu <minutes> minute         (ca \xC3\xAEnainte)"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(14
 #";   - (ensure <average>) - c\xC3\xA2t timp tt-ul mediu al caselor est"
 #"e mai mare dec\xC3\xA2t"
) 0 0 24 29 1 #"\n"
0 0 17 3 108
(15
 #";                          <average>, se adaug\xC4\x83 case f\xC4\x83"
 #"r\xC4\x83 restric\xC8\x9Bii (case slow)           (ca \xC3\xAEnainte)"
) 0 0 24 29 1 #"\n"
0 0 17 3 84
(16
 #";   - <x> - trec <x> minute de la ultima cerere, iar starea caselor s"
 #"e actualizeaz\xC4\x83"
) 0 0 24 29 1 #"\n"
0 0 17 3 106
(17
 #";           corespunz\xC4\x83tor (cu efect asupra c\xC3\xA2mpurilor t"
 #"t, et, queue)                       (ca \xC3\xAEnainte)"
) 0 0 24 29 1 #"\n"
0 0 17 3 105
(18
 #";   - (close <index>) - casa index este \xC3\xAEnchis\xC4\x83        "
 #"                                    (   NOU!   )"
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(19
 #"; Sistemul trebuie s\xC4\x83 proceseze cele 5 tipuri de cereri \xC3"
 #"\xAEn ordine, astfel:"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(20
 #"; - persoanele vor fi distribuite la casele DESCHISE cu tt minim; nu "
 #"se va \xC3\xAEnt\xC3\xA2mpla"
) 0 0 24 29 1 #"\n"
0 0 17 3 115
(21
 #";   niciodat\xC4\x83 ca o persoan\xC4\x83 s\xC4\x83 nu poat\xC4\x83 f"
 #"i distribuit\xC4\x83 la nicio cas\xC4\x83                       (mic"
 #"\xC4\x83 modificare)"
) 0 0 24 29 1 #"\n"
0 0 17 3 97
(22
 #"; - c\xC3\xA2nd o cas\xC4\x83 sufer\xC4\x83 o \xC3\xAEnt\xC3\xA2rzier"
 #"e, tt-ul \xC8\x99i et-ul ei cresc (chiar dac\xC4\x83 nu are clien\xC8"
 #"\x9Bi);"
) 0 0 24 29 1 #"\n"
0 0 17 3 106
(23
 #";   nu aplica\xC8\x9Bi vreun tratament special caselor \xC3\xAEnchise"
 #"                                    (ca \xC3\xAEnainte)"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(24
 #"; - tt-ul mediu (ttmed) se calculeaz\xC4\x83 pentru toate casele DESC"
 #"HISE, "
) 0 0 24 29 1 #"\n"
0 0 17 3 115
(25
 #";   iar la nevoie ve\xC8\x9Bi ad\xC4\x83uga case slow una c\xC3\xA2te"
 #" una, p\xC3\xA2n\xC4\x83 c\xC3\xA2nd ttmed <= <average>         (mic"
 #"\xC4\x83 modificare)"
) 0 0 24 29 1 #"\n"
0 0 17 3 89
(26
 #"; - c\xC3\xA2nd timpul prin sistem avanseaz\xC4\x83 cu <x> minute, tt"
 #"-ul, et-ul \xC8\x99i queue-ul tuturor "
) 0 0 24 29 1 #"\n"
0 0 17 3 92
(27
 #";   caselor se actualizeaz\xC4\x83 pentru a reflecta trecerea timpulu"
 #"i; dac\xC4\x83 unul sau mai mul\xC8\x9Bi "
) 0 0 24 29 1 #"\n"
0 0 17 3 110
(28
 #";   clien\xC8\x9Bi termin\xC4\x83 de stat la coad\xC4\x83, ie\xC8\x99"
 #"irile lor sunt contorizate \xC3\xAEn ordine cronologic\xC4\x83. (ca "
 #"\xC3\xAEnainte)"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(29
 #"; - c\xC3\xA2nd o cas\xC4\x83 se \xC3\xAEnchide, ea nu mai prime\xC8"
 #"\x99te clien\xC8\x9Bi noi; clien\xC8\x9Bii care erau deja acolo"
) 0 0 24 29 1 #"\n"
0 0 17 3 93
(30
 #";   avanseaz\xC4\x83 normal, p\xC3\xA2n\xC4\x83 la ie\xC8\x99irea din"
 #" supermarket                                    "
) 0 0 24 29 1 #"\n"
0 0 17 3 61
(31
 #"; Rezultatul func\xC8\x9Biei serve va fi o pereche cu punct \xC3\xAEn"
 #"tre:"
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(32
 #"; - lista sortat\xC4\x83 cronologic a clien\xC8\x9Bilor care au p\xC4"
 #"\x83r\xC4\x83sit supermarketul:"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
(33
 #";   - fiecare element din list\xC4\x83 va avea forma (index_cas\xC4"
 #"\x83 . nume)"
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(34
 #";   - dac\xC4\x83 mai mul\xC8\x9Bi clien\xC8\x9Bi ies simultan, sorta"
 #"\xC8\x9Bi-i cresc\xC4\x83tor dup\xC4\x83 indexul casei"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(35
 #"; - lista cozilor (de la case DESCHISE sau \xC3\x8ENCHISE) care \xC3"
 #"\xAEnc\xC4\x83 au clien\xC8\x9Bi:"
) 0 0 24 29 1 #"\n"
0 0 17 3 84
(36
 #";   - fiecare element va avea forma (index_cas\xC4\x83 . coad\xC4\x83"
 #") (coada este de tip queue)"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";   - lista este sortat\304\203 dup\304\203 indexul casei"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"serve"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"serve-aux"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"serve-aux"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 1 #" "
0 0 14 3 14 #"clienti-iesiti"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 14 #"clienti-iesiti"
0 0 24 3 2 #" ("
0 0 14 3 10 #"out-format"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"ensure"
0 0 24 3 1 #" "
0 0 14 3 9 #"<average>"
0 0 24 3 3 #") ("
0 0 14 3 9 #"serve-aux"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 13 #"fast-counters"
0 0 24 3 2 #" ("
0 0 14 3 12 #"deschid-case"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #") "
0 0 14 3 14 #"clienti-iesiti"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"close"
0 0 24 3 1 #" "
0 0 14 3 7 #"<index>"
0 0 24 3 3 #") ("
0 0 14 3 9 #"serve-aux"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 3 #") ("
0 0 14 3 21 #"actualizare-inchidere"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 13 #"fast-counters"
0 0 24 3 3 #") ("
0 0 14 3 21 #"actualizare-inchidere"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #") "
0 0 14 3 14 #"clienti-iesiti"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 7 #"n-items"
0 0 24 3 3 #") ("
0 0 14 3 9 #"serve-aux"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 12 #"addToCounter"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 12 #"addToCounter"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 4 #"))) "
0 0 14 3 14 #"clienti-iesiti"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 5 #"delay"
0 0 24 3 1 #" "
0 0 14 3 7 #"<index>"
0 0 24 3 1 #" "
0 0 14 3 9 #"<minutes>"
0 0 24 3 3 #") ("
0 0 14 3 9 #"serve-aux"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 3 #") ("
0 0 15 3 5 #"delay"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 13 #"fast-counters"
0 0 24 3 3 #") ("
0 0 15 3 5 #"delay"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #") "
0 0 14 3 14 #"clienti-iesiti"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 3 #"<x>"
0 0 24 3 2 #" ("
0 0 14 3 9 #"serve-aux"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 7 #"case<x>"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 14 #"clienti-iesiti"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 7 #"case<x>"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 14 #"clienti-iesiti"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 7 #"case<x>"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"requests"
0 0 24 3 2 #") "
0 0 14 3 14 #"clienti-iesiti"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"        )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";format output (casa . queue)"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";---------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"out-format"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"out-format-aux"
0 0 24 3 2 #" ("
0 0 14 3 11 #"case-nenule"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"out-format-aux"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"acc"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"out-format-aux"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 3 #") ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-index"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";---------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";<x>"
0 0 24 29 1 #"\n"
0 0 17 3 71
(37
 #";--------------------------------------------------------------------"
 #"--"
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #";scoate toate casele care nu au clienti"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"case-nenule"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 12 #"queue-empty?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #")))) "
0 0 14 3 8 #"counters"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";daca o sa plece unul din clienti"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"pleaca-client?"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #" "
0 0 14 3 7 #"minutes"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"case-nenule"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 3 #")) "
0 0 14 3 7 #"minutes"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 6 #"min-et"
0 0 24 3 2 #" ("
0 0 14 3 11 #"case-nenule"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 4 #"))) "
0 0 14 3 7 #"minutes"
0 0 24 3 4 #")  ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 6 #"min-et"
0 0 24 3 2 #" ("
0 0 14 3 11 #"case-nenule"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 7 #"minutes"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";intoarce un client daca urmeaza sa iasa "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"client-care-iese"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 7 #"minutes"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-et"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 2 #") "
0 0 14 3 7 #"minutes"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 12 #"queue-empty?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-index"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"top"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";situatia in care casa nu are clienti dar are tt"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"need-to-leave"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 7 #"minutes"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 10 #"counter-et"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 2 #") "
0 0 14 3 7 #"minutes"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 12 #"queue-empty?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-queue"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 25 #"remove-first-from-counter"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 25 #"pass-time-through-counter"
0 0 24 3 1 #" "
0 0 14 3 7 #"minutes"
0 0 24 3 2 #") "
0 0 14 3 7 #"counter"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 24 29 1 #"\n"
0 0 17 3 47 #";actualizeaza toate casele dint-o lista de case"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"actualizare-case"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #" "
0 0 14 3 7 #"minutes"
0 0 24 3 1 #" "
0 0 14 3 11 #"actualizate"
0 0 24 3 1 #" "
0 0 14 3 15 #"clienti-plecati"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 11 #"actualizate"
0 0 24 3 1 #" "
0 0 14 3 15 #"clienti-plecati"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 16 #"actualizare-case"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #") "
0 0 14 3 7 #"minutes"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 11 #"actualizate"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"need-to-leave"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #") "
0 0 14 3 7 #"minutes"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 15 #"clienti-plecati"
0 0 24 3 3 #"  ("
0 0 14 3 16 #"client-care-iese"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #") "
0 0 14 3 7 #"minutes"
0 0 24 3 6 #"))))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"case<x>"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 1 #" "
0 0 14 3 6 #"minute"
0 0 24 3 1 #" "
0 0 14 3 15 #"clienti-plecati"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 6 #"minute"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 1 #" "
0 0 14 3 15 #"clienti-plecati"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"case<x>"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 16 #"actualizare-case"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 2 #" ("
0 0 14 3 14 #"pleaca-client?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #") "
0 0 14 3 6 #"minute"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())) "
0 0 17 3 14 #";fast-counters"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 16 #"actualizare-case"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #" ("
0 0 14 3 14 #"pleaca-client?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #") "
0 0 14 3 6 #"minute"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 5 #"())) "
0 0 17 3 14 #";slow-counters"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 6 #"minute"
0 0 24 3 2 #" ("
0 0 14 3 14 #"pleaca-client?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #") "
0 0 14 3 6 #"minute"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 15 #"clienti-plecati"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 16 #"actualizare-case"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 2 #" ("
0 0 14 3 14 #"pleaca-client?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #") "
0 0 14 3 6 #"minute"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 16 #"actualizare-case"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #" ("
0 0 14 3 14 #"pleaca-client?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #") "
0 0 14 3 6 #"minute"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 8 #"()))))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 71 37 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";Pt Adaugarea unui client (<name> <n-items>)"
0 0 24 29 1 #"\n"
0 0 17 3 96
(38
 #";--------------------------------------------------------------------"
 #"---------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"case-deschise"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-stare"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #")))) "
0 0 14 3 8 #"counters"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"min-tt-case-deschise"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"case-deschise"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"min-tt"
0 0 24 3 2 #" ("
0 0 14 3 13 #"case-deschise"
0 0 24 3 1 #" "
0 0 14 3 8 #"counters"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"addToCounter"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 3 #")) "
0 0 14 3 5 #"ITEMS"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 20 #"min-tt-case-deschise"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 20 #"min-tt-case-deschise"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 15 #"actualizare-add"
0 0 24 3 2 #" ("
0 0 14 3 20 #"min-tt-case-deschise"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 2 #") "
0 0 14 3 6 #"cerere"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 3 #" ) "
0 0 14 3 13 #"slow-counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 2 #" ("
0 0 14 3 15 #"actualizare-add"
0 0 24 3 2 #" ("
0 0 14 3 20 #"min-tt-case-deschise"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #") "
0 0 14 3 6 #"cerere"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 5 #" ))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"actualizare-add"
0 0 24 3 1 #" "
0 0 14 3 7 #"pereche"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 1 #" "
0 0 14 3 10 #"lista-case"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #" [("
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 2 #"tt"
0 0 24 3 1 #" "
0 0 14 3 2 #"et"
0 0 24 3 1 #" "
0 0 14 3 5 #"queue"
0 0 24 3 1 #" "
0 0 14 3 5 #"stare"
0 0 24 3 2 #") "
0 0 14 3 5 #"index"
0 0 24 3 4 #"]) ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"pereche"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 3 #" (("
0 0 14 3 14 #"add-to-counter"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 4 #"))) "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 10 #"lista-case"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 97
(39
 #";--------------------------------------------------------------------"
 #"----------------------------"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";Pt (ensure <average>)"
0 0 24 29 1 #"\n"
0 0 17 3 97 39 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"deschid-case"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 12 #"calcul-medie"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 13 #"case-deschise"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 3 #") ("
0 0 14 3 13 #"case-deschise"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 13 #"case-deschise"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 3 #") ("
0 0 14 3 13 #"case-deschise"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 6 #")))) ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 13 #"slow-counters"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"deschid-case"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 13 #"empty-counter"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 13 #"fast-counters"
0 0 24 3 1 #" "
0 0 14 3 13 #"slow-counters"
0 0 24 3 9 #")))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"calcul-medie"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 8 #"tt-total"
0 0 24 3 1 #" "
0 0 14 3 8 #"sizeInit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 8 #"tt-total"
0 0 24 3 1 #" "
0 0 14 3 8 #"sizeInit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"calcul-medie"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 8 #"tt-total"
0 0 24 3 2 #" ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 4 #") [("
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 2 #"tt"
0 0 24 3 1 #" "
0 0 14 3 2 #"et"
0 0 24 3 1 #" "
0 0 14 3 5 #"queue"
0 0 24 3 1 #" "
0 0 14 3 5 #"stare"
0 0 24 3 2 #") "
0 0 14 3 2 #"tt"
0 0 24 3 4 #"])) "
0 0 14 3 8 #"sizeInit"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 97 39 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";Pt Intarzierea unei case (delay <index> <minutes>)"
0 0 24 29 1 #"\n"
0 0 17 3 97 39 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 15 3 5 #"delay"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 1 #" "
0 0 14 3 10 #"lista-case"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #" [("
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 2 #"tt"
0 0 24 3 1 #" "
0 0 14 3 2 #"et"
0 0 24 3 1 #" "
0 0 14 3 5 #"queue"
0 0 24 3 1 #" "
0 0 14 3 5 #"stare"
0 0 24 3 2 #") "
0 0 14 3 5 #"index"
0 0 24 3 4 #"]) ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"intarziere"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 10 #"lista-case"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"intarziere"
0 0 24 3 1 #" "
0 0 14 3 4 #"casa"
0 0 24 3 1 #" "
0 0 14 3 6 #"minute"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"tt+"
0 0 24 3 2 #" ("
0 0 14 3 3 #"et+"
0 0 24 3 1 #" "
0 0 14 3 4 #"casa"
0 0 24 3 1 #" "
0 0 14 3 6 #"minute"
0 0 24 3 2 #") "
0 0 14 3 6 #"minute"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 96 38 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";Pt inchidere case"
0 0 24 29 1 #"\n"
0 0 17 3 96 38 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"actualizare-inchidere"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 1 #" "
0 0 14 3 10 #"lista-case"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 13 #"counter-index"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 6 #"cerere"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"struct-copy"
0 0 24 3 1 #" "
0 0 14 3 7 #"counter"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ["
0 0 14 3 5 #"stare"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"append"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 10 #"lista-case"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"two-sums"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 15 #"sum-of-list-nv0"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #") ("
0 0 14 3 15 #"sum-of-list-nv1"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"sum-of-list-nv0"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             (("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"sum-of-list-nv1"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             (("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 15 #"sum-of-list-nv0"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0           0
